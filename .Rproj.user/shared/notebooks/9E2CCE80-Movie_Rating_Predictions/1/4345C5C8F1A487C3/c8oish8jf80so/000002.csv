"0","dl <- tempfile()"
"0","download.file(""http://files.grouplens.org/datasets/movielens/ml-10m.zip"", dl)"
"2","trying URL 'http://files.grouplens.org/datasets/movielens/ml-10m.zip'
"
"2","Content type 'application/zip'"
"2"," length 65566137 bytes (62.5 MB)
"
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","
"
"2","downloaded 62.5 MB

"
"0","ratings <- fread(text = gsub(""::"", ""\t"", readLines(unzip(dl, ""ml-10M100K/ratings.dat""))),"
"0","                 col.names = c(""userId"", ""movieId"", ""rating"", ""timestamp""))"
"0",""
"0","movies <- str_split_fixed(readLines(unzip(dl, ""ml-10M100K/movies.dat"")), ""\\::"", 3)"
"0","colnames(movies) <- c(""movieId"", ""title"", ""genres"")"
"0",""
"0","movies <- as.data.frame(movies) %>% mutate(movieId = as.numeric(movieId),"
"0","                                           title = as.character(title),"
"0","                                           genres = as.character(genres))"
"0",""
"0",""
"0","movielens <- left_join(ratings, movies, by = ""movieId"")"
"0",""
"0","# Validation set will be 10% of MovieLens data"
"0","set.seed(1, sample.kind=""Rounding"")"
"2","non-uniform 'Rounding' sampler used"
"0","test_index <- createDataPartition(y = movielens$rating, times = 1, p = 0.1, list = FALSE)"
"0","edx <- movielens[-test_index,]"
"0","temp <- movielens[test_index,]"
"0",""
"0","# Make sure userId and movieId in validation set are also in edx set"
"0","validation <- temp %>% "
"0","  semi_join(edx, by = ""movieId"") %>%"
"0","  semi_join(edx, by = ""userId"")"
"0",""
"0","# Add rows removed from validation set back into edx set"
"0","removed <- anti_join(temp, validation)"
"2","Joining, by = c(""userId"", ""movieId"", ""rating"", ""timestamp"", ""title"", ""genres"")
"
"0","edx <- rbind(edx, removed)"
"0",""
"0","rm(dl, ratings, movies, test_index, temp, movielens, removed)"
